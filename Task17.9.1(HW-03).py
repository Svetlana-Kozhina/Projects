# Напишите программу, которой на вход подается последовательность чисел через пробел, а также запрашивается у
# пользователя любое число.
# В качестве задания повышенного уровня сложности можете выполнить проверку соответствия указанному в условии ввода данных.
# Далее программа работает по следующему алгоритму:
# 1. Преобразование введённой последовательности в список
# 2. Сортировка списка по возрастанию элементов в нем (для реализации сортировки определите функцию)
# 3. Устанавливается номер позиции элемента, который меньше введенного пользователем числа, а следующий за ним больше
# или равен этому числу.
# При установке позиции элемента воспользуйтесь алгоритмом двоичного поиска, который был рассмотрен в этом модуле.
# Реализуйте его также отдельной функцией.

# Подсказка. Помните, что у вас есть числа, которые могут не соответствовать заданному условию.
# В этом случае необходимо вывести соответствующее сообщение

seq_numbers = input('Введите последовательность чисел через пробел: ')
number = int(input('Введите число для поиска и сравнения: '))

list_of_numbers = list(map(int, seq_numbers.split(' ')))

print(list_of_numbers) # До сортировки

def my_sort(a):
    for i in range(len(a)): # Сортировка пузырьком
        for j in range(len(a) - i - 1):
            if a[j] > a[j + 1]:
                a[j], a[j + 1] = a[j + 1], a[j]
    return a

list_of_numbers_sorted = my_sort(list_of_numbers)
print(list_of_numbers_sorted) # После сортировки

def search_number_index(array, element): # устанавливается номер позиции элемента, который меньше введенного
    # числа, а следующий за ним больше или равен этому числу
    left = 0
    right = len(array)
    while left < right:
        middle = (left + right) // 2
        if element > array[middle]:
            left = middle + 1
        else:
            right = middle
    return left-1 if 0 < left < len(array) else 'Такого числа нет в диапазоне списка'

print(search_number_index(list_of_numbers_sorted, number))

# 25 4 5 2 1 12 568